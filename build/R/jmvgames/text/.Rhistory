nChars <- lapply(words, nchar)
sentences <- list()
for (i in 1:length(words)) {
wordsTemp <- words[[i]]
nCharsTemp <- nChars[[i]]
GO <- TRUE
while (GO) {
nCharsSpace <- nCharsTemp
nCharsSpace[-1] <- nCharsTemp[-1] + 1
cumChars <- cumsum(nCharsSpace)
index <- max(which((cumChars <= sentenceLength) == TRUE))
sentences[[length(sentences) + 1]] <- paste0(paste0(words[1:index], collapse = " "), paste(rep(" ", sentenceLength - cumChars[index]), collapse = ""))
wordsTemp <- wordsTemp[-(1:index)]
nCharsTemp <- nCharsTemp[-(1:index)]
if (length(words) == 0)
GO <- FALSE
}
if (length(words) > i)
sentences[[length(sentences) + 1]] <- paste0(rep(" ", sentenceLength), collapse = "")
}
words <- strsplit(unlist(strsplit(x = text, split = "\n")), split = " ")
words <- lapply(words, function (x) x[x != ""])
words
nChars <- lapply(words, nchar)
1:length(words)
i = 1
wordsTemp <- words[[i]]
nCharsTemp <- nChars[[i]]
wordsTemp
nCharsTemp
nCharsSpace <- nCharsTemp
nCharsSpace[-1] <- nCharsTemp[-1] + 1
cumChars <- cumsum(nCharsSpace)
cumChars
index <- max(which((cumChars <= sentenceLength) == TRUE))
index
sentences[[length(sentences) + 1]] <- paste0(paste0(words[1:index], collapse = " "), paste(rep(" ", sentenceLength - cumChars[index]), collapse = ""))
wordsTemp <- wordsTemp[-(1:index)]
nCharsTemp <- nCharsTemp[-(1:index)]
words <- strsplit(unlist(strsplit(x = text, split = "\n")), split = " ")
words <- lapply(words, function (x) x[x != ""])
nChars <- lapply(words, nchar)
sentences <- list()
for (i in 1:length(words)) {
wordsTemp <- words[[i]]
nCharsTemp <- nChars[[i]]
GO <- TRUE
while (GO) {
nCharsSpace <- nCharsTemp
nCharsSpace[-1] <- nCharsTemp[-1] + 1
cumChars <- cumsum(nCharsSpace)
index <- max(which((cumChars <= sentenceLength) == TRUE))
sentences[[length(sentences) + 1]] <- paste0(paste0(words[1:index], collapse = " "), paste(rep(" ", sentenceLength - cumChars[index]), collapse = ""))
wordsTemp <- wordsTemp[-(1:index)]
nCharsTemp <- nCharsTemp[-(1:index)]
if (length(wordsTemp) == 0)
GO <- FALSE
}
if (length(words) > i)
words <- strsplit(unlist(strsplit(x = text, split = "\n")), split = " ")
words <- lapply(words, function (x) x[x != ""])
nChars <- lapply(words, nchar)
sentences <- list()
for (i in 1:length(words)) {
wordsTemp <- words[[i]]
nCharsTemp <- nChars[[i]]
GO <- TRUE
while (GO) {
nCharsSpace <- nCharsTemp
nCharsSpace[-1] <- nCharsTemp[-1] + 1
cumChars <- cumsum(nCharsSpace)
index <- max(which((cumChars <= sentenceLength) == TRUE))
sentences[[length(sentences) + 1]] <- paste0(paste0(words[1:index], collapse = " "), paste(rep(" ", sentenceLength - cumChars[index]), collapse = ""))
wordsTemp <- wordsTemp[-(1:index)]
nCharsTemp <- nCharsTemp[-(1:index)]
if (length(wordsTemp) == 0)
GO <- FALSE
}
if (length(words) > i)
sentences[[length(sentences) + 1]] <- paste0(rep(" ", sentenceLength), collapse = "")
}
sentences
words <- strsplit(unlist(strsplit(x = text, split = "\n")), split = " ")
words <- lapply(words, function (x) x[x != ""])
nChars <- lapply(words, nchar)
sentences <- list()
for (i in 1:length(words)) {
wordsTemp <- words[[i]]
nCharsTemp <- nChars[[i]]
GO <- TRUE
while (GO) {
nCharsSpace <- nCharsTemp
nCharsSpace[-1] <- nCharsTemp[-1] + 1
cumChars <- cumsum(nCharsSpace)
index <- max(which((cumChars <= sentenceLength) == TRUE))
sentences[[length(sentences) + 1]] <- paste0(paste0(wordsTemp[1:index], collapse = " "), paste(rep(" ", sentenceLength - cumChars[index]), collapse = ""))
wordsTemp <- wordsTemp[-(1:index)]
nCharsTemp <- nCharsTemp[-(1:index)]
if (length(wordsTemp) == 0)
GO <- FALSE
}
if (length(words) > i)
sentences[[length(sentences) + 1]] <- paste0(rep(" ", sentenceLength), collapse = "")
}
sentences
text <- "Good job! Now, it\'s time to go back to the spreadheet editor and start typing letters in the chosen column.\n Have fun!"
words <- strsplit(unlist(strsplit(x = text, split = "\n")), split = " ")
words <- lapply(words, function (x) x[x != ""])
words
words <- strsplit(unlist(strsplit(x = text, split = "\n")), split = " ")
words <- lapply(words, function (x) x[x != ""])
nChars <- lapply(words, nchar)
sentences <- list()
for (i in 1:length(words)) {
wordsTemp <- words[[i]]
nCharsTemp <- nChars[[i]]
GO <- TRUE
while (GO) {
nCharsSpace <- nCharsTemp
nCharsSpace[-1] <- nCharsTemp[-1] + 1
cumChars <- cumsum(nCharsSpace)
index <- max(which((cumChars <= sentenceLength) == TRUE))
sentences[[length(sentences) + 1]] <- paste0(paste0(wordsTemp[1:index], collapse = " "), paste(rep(" ", sentenceLength - cumChars[index]), collapse = ""))
wordsTemp <- wordsTemp[-(1:index)]
nCharsTemp <- nCharsTemp[-(1:index)]
if (length(wordsTemp) == 0)
GO <- FALSE
}
if (length(words) > i)
sentences[[length(sentences) + 1]] <- paste0(rep(" ", sentenceLength), collapse = "")
}
sentences
text <- "Good job! Now, it\'s time to go back to the spreadheet editor and start typing letters in the chosen column.\n\n Have fun!"
words <- strsplit(unlist(strsplit(x = text, split = "\n")), split = " ")
words <- lapply(words, function (x) x[x != ""])
words
words <- strsplit(unlist(strsplit(x = text, split = "\n")), split = " ")
words <- lapply(words, function (x) x[x != ""])
nChars <- lapply(words, nchar)
sentences <- list()
for (i in 1:length(words)) {
wordsTemp <- words[[i]]
nCharsTemp <- nChars[[i]]
GO <- TRUE
while (GO) {
nCharsSpace <- nCharsTemp
nCharsSpace[-1] <- nCharsTemp[-1] + 1
cumChars <- cumsum(nCharsSpace)
index <- max(which((cumChars <= sentenceLength) == TRUE))
sentences[[length(sentences) + 1]] <- paste0(paste0(wordsTemp[1:index], collapse = " "), paste(rep(" ", sentenceLength - cumChars[index]), collapse = ""))
wordsTemp <- wordsTemp[-(1:index)]
nCharsTemp <- nCharsTemp[-(1:index)]
if (length(wordsTemp) == 0)
GO <- FALSE
}
if (length(words) > i)
sentences[[length(sentences) + 1]] <- paste0(rep(" ", sentenceLength), collapse = "")
}
sentences
words <- strsplit(unlist(strsplit(x = text, split = "\n")), split = " ")
words <- lapply(words, function (x) x[x != ""])
nChars <- lapply(words, nchar)
sentences <- list()
for (i in 1:length(words)) {
wordsTemp <- words[[i]]
nCharsTemp <- nChars[[i]]
GO <- TRUE
while (GO) {
if (length(wordsTemp) == 0)
GO <- FALSE
nCharsSpace <- nCharsTemp
nCharsSpace[-1] <- nCharsTemp[-1] + 1
cumChars <- cumsum(nCharsSpace)
index <- max(which((cumChars <= sentenceLength) == TRUE))
sentences[[length(sentences) + 1]] <- paste0(paste0(wordsTemp[1:index], collapse = " "), paste(rep(" ", sentenceLength - cumChars[index]), collapse = ""))
wordsTemp <- wordsTemp[-(1:index)]
nCharsTemp <- nCharsTemp[-(1:index)]
}
if (length(words) > i)
sentences[[length(sentences) + 1]] <- paste0(rep(" ", sentenceLength), collapse = "")
}
text()
text
words <- strsplit(unlist(strsplit(x = text, split = "\n")), split = " ")
words <- lapply(words, function (x) x[x != ""])
nChars <- lapply(words, nchar)
text
words
nChars
i = 2
wordsTemp <- words[[i]]
nCharsTemp <- nChars[[i]]
wordsTemp
nCharsTemp
length(wordsTemp)
length(words)
words <- strsplit(unlist(strsplit(x = text, split = "\n")), split = " ")
words <- lapply(words, function (x) x[x != ""])
nChars <- lapply(words, nchar)
sentences <- list()
for (i in 1:length(words)) {
wordsTemp <- words[[i]]
nCharsTemp <- nChars[[i]]
GO <- TRUE
while (GO) {
if (length(wordsTemp) == 0)
GO <- FALSE
nCharsSpace <- nCharsTemp
nCharsSpace[-1] <- nCharsTemp[-1] + 1
cumChars <- cumsum(nCharsSpace)
index <- max(which((cumChars <= sentenceLength) == TRUE))
sentences[[length(sentences) + 1]] <- paste0(paste0(wordsTemp[1:index], collapse = " "), paste(rep(" ", sentenceLength - cumChars[index]), collapse = ""))
wordsTemp <- wordsTemp[-(1:index)]
nCharsTemp <- nCharsTemp[-(1:index)]
}
if (length(words) > i)
sentences[[length(sentences) + 1]] <- paste0(rep(" ", sentenceLength), collapse = "")
}
words
i = 1
wordsTemp <- words[[i]]
nCharsTemp <- nChars[[i]]
GO <- TRUE
while (GO) {
if (length(wordsTemp) == 0)
GO <- FALSE
nCharsSpace <- nCharsTemp
nCharsSpace[-1] <- nCharsTemp[-1] + 1
cumChars <- cumsum(nCharsSpace)
index <- max(which((cumChars <= sentenceLength) == TRUE))
sentences[[length(sentences) + 1]] <- paste0(paste0(wordsTemp[1:index], collapse = " "), paste(rep(" ", sentenceLength - cumChars[index]), collapse = ""))
wordsTemp <- wordsTemp[-(1:index)]
nCharsTemp <- nCharsTemp[-(1:index)]
}
nCharsSpace <- nCharsTemp
nCharsSpace[-1] <- nCharsTemp[-1] + 1
cumChars <- cumsum(nCharsSpace)
index <- max(which((cumChars <= sentenceLength) == TRUE))
index <- max(which((cumChars <= sentenceLength) == TRUE))
cumChars
length(wordsTemp)
i = 1
wordsTemp <- words[[i]]
wordsTemp
nCharsTemp <- nChars[[i]]
nCharTemp
nCharsTemp
nCharsSpace <- nCharsTemp
nCharsSpace[-1] <- nCharsTemp[-1] + 1
cumChars <- cumsum(nCharsSpace)
index <- max(which((cumChars <= sentenceLength) == TRUE))
sentences[[length(sentences) + 1]] <- paste0(paste0(wordsTemp[1:index], collapse = " "), paste(rep(" ", sentenceLength - cumChars[index]), collapse = ""))
wordsTemp <- wordsTemp[-(1:index)]
nCharsTemp <- nCharsTemp[-(1:index)]
if (length(words) > i)
sentences[[length(sentences) + 1]] <- paste0(rep(" ", sentenceLength), collapse = "")
sentences
strwrap(text)
?strwrap
strwrap(text, 40)
sentences <- strwrap(text, sentenceLength)
sentences
sprintf("%-20s", sentences)
sprintf(sentenceLength, sentences)
?sprintf
sprintf("%-40s", sentences)
sprintf(paste0("%-", sentenceLength,"s"), sentences)
sentences <- strwrap(text, sentenceLength)
sentences <-  sprintf(paste0("%-", sentenceLength,"s"), sentences)
sentences
max(length(sentences))
length(sentences)
max(nchar(sentences))
nchar(sentences)
sentences <- strwrap(text, sentenceLength)
sentences <- strwrap(text, sentenceLength)
sentences <-  sprintf(paste0("%-", max(nchar(sentences)),"s"), sentences)
sentences
sentences <- strwrap(text, sentenceLength)
maxSentence <- max(nchar(sentences))
sentences <-  sprintf(paste0("%-", maxSentence,"s"), sentences)
scroll <- c()
scroll[1] <- paste(" ", paste0(rep("_", maxSentence + 5), collapse = ""), collapse = "")
scroll[2] <- paste("/\\", paste0(rep(" ", maxSentence + 3), collapse = ""), "\\", collapse = "")
scroll[3] <- paste("\\_|", paste0(rep(" ", maxSentence + 2), collapse = ""), "|", collapse = "")
for (i in 1:length(sentences))
scroll[length(scroll) + 1] <- paste0("  |  ", sentences[[i]], "  |", collapse = "")
scroll[length(scroll) + 1] <- paste0("  |  ", paste(rep(" ", maxSentence), collapse = ""), "  |", collapse = "")
scroll[length(scroll) + 1] <- paste0("  |  ", paste(rep("_", maxSentence + 2), collapse = ""), "|_", collapse = "")
scroll[length(scroll) + 1] <- paste0("  \\_/", paste(rep("_", maxSentence + 4), collapse = ""), "/", collapse = "")
paste(scroll, collapse="\n")
cat(paste(scroll, collapse="\n"))
.scrollify = function (text, sentenceLength) {
sentences <- strwrap(text, sentenceLength)
maxSentence <- max(nchar(sentences))
sentences <-  sprintf(paste0("%-", maxSentence,"s"), sentences)
scroll <- c()
scroll[1] <- paste(" ", paste0(rep("_", maxSentence + 5), collapse = ""), collapse = "")
scroll[2] <- paste("/\\", paste0(rep(" ", maxSentence + 3), collapse = ""), "\\", collapse = "")
scroll[3] <- paste("\\_|", paste0(rep(" ", maxSentence + 2), collapse = ""), "|", collapse = "")
for (i in 1:length(sentences))
scroll[length(scroll) + 1] <- paste0("  |  ", sentences[[i]], "  |", collapse = "")
scroll[length(scroll) + 1] <- paste0("  |  ", paste(rep(" ", maxSentence), collapse = ""), "  |", collapse = "")
scroll[length(scroll) + 1] <- paste0("  |  ", paste(rep("_", maxSentence + 2), collapse = ""), "|_", collapse = "")
scroll[length(scroll) + 1] <- paste0("  \\_/", paste(rep("_", maxSentence + 4), collapse = ""), "/", collapse = "")
return(paste(scroll, collapse="\n"))
}
intro1 <- private$.scrollify("To play this game you first need to drag an empty variable to the \"Letters\" box", 40)
intro2 <- private$.scrollify("Good job! Now, it\'s time to go back to the spreadheet editor and start typing letters in the chosen column. Have fun!", 40)
.scrollify("To play this game you first need to drag an empty variable to the \"Letters\" box", 40)
cat(.scrollify("To play this game you first need to drag an empty variable to the \"Letters\" box", 40))
cat(.scrollify("Good job! Now, it\'s time to go back to the spreadheet editor and start typing letters in the chosen column. Have fun!", 40))
private$.scrollify("Good job! Now, it\'s time to go back to the spreadheet editor and start typing letters in the chosen column. \n\nHave fun!", 40)
.scrollify("Good job! Now, it\'s time to go back to the spreadheet editor and start typing letters in the chosen column. \n\nHave fun!", 40)
cat(.scrollify("Good job! Now, it\'s time to go back to the spreadheet editor and start typing letters in the chosen column. \n\nHave fun!", 40))
?strwrap
stages(0)
stages[0]
stages <- read.csv("stages.csv", header = FALSE, stringsAsFactors = FALSE)[,1]
stages
strsplit(stages[1], split = "\n")
intro1
intro1 <- .scrollify("To play this game you first need to drag an empty variable to the \"Letters\" box", 40)
intro1
intro <- unlist(strsplit(intro1, split = "\n"))
hangman <- unlist(strsplit(stages[1], split = "\n"))
intro
strsplit
hangman
stages <- read.csv("stages.csv", header = FALSE, stringsAsFactors = FALSE)[,1]
hangman <- unlist(strsplit(stages[1], split = "\n"))
hangman
paste(stages, hangman)
cat(paste(stages, hangman))
cat(paste0(stages, hangman, collapse = "          "))
cat(paste0(hangman, intro, collapse = "          "))
cat(paste0(paste0(hangman, intro, collapse = "          "), "\n")
_
cat(paste0(paste0(hangman, intro, collapse = "          "), "\n"))
stage0 <- unlist(strsplit(stages[1], split = "\n"))
stage0
stage0[1]
nchar(stage0)
nchar(intro)
text()
text <- list(stage0, intro)
text
texts <- text
lapply(texts, length)
lengths <- sapply(texts, length)
lengths
max(lengths):lengths[i]
max(lengths)
i = 1
lengths[i]
1:max(lengths)[-1:lengths[i]]
1:max(lengths)[-(1:lengths[i])]
1:max(lengths)
-(1:lengths[i])
1:max(lengths)[-c(1:lengths[i])]
1:max(lengths)[-1:lengths[i]]
1:lengths[i]
1:max(lengths)[1]
1:max(lengths)
(1:max(lengths))[-1:lengths[i]]
(1:max(lengths))[-(1:lengths[i])]
rep(" ", 10)
as.string(rep(" ", 10))
paste0(rep(" ", 10), combine = TRUE)
paste0(rep(" ", 10), combine = "")
?paste0
paste0(rep(" ", 10), collapse = "")
paste0(rep(" ", max(nchar(texts[[i]]))), collapse = "")
max(nchar(texts[[i]]))
lengths <- sapply(texts, length)
for (i in 1:length(texts)) {
texts[[i]][(1:max(lengths))[-(1:lengths[i])]] <- paste0(rep(" ", max(nchar(texts[[i]]))), collapse = "")
}
texts
paste0(texts, collapse = paste0(rep(" ", spaces), collapse = ""))
spaces = 10
paste0(texts, collapse = paste0(rep(" ", spaces), collapse = ""))
cat(paste0(texts, collapse = paste0(rep(" ", spaces), collapse = "")))
texts
lapply(texts, functions(x) return(i))
i = 1
lapply(texts, functions(x) return(i))
lapply(texts, function (x) return(i))
lapply(texts, function (x) return(x[[i]]))
for (i in 1:max(lengths))
sapply(texts, function (x) return(x[[i]]))
sapply(texts, function (x) return(x[[i]]))
lines <- c()
for (i in 1:max(lengths))
lines[i] <- paste0(sapply(texts, function (x) return(x[[i]])), collapse = paste0(rep(" ", spaces), collapse = ""))
lines
cat(paste0(lines, collapse="\n"))
.combine = function (texts, spaces) {
lengths <- sapply(texts, length)
for (i in 1:length(texts))
texts[[i]][(1:max(lengths))[-(1:lengths[i])]] <- paste0(rep(" ", max(nchar(texts[[i]]))), collapse = "")
lines <- c()
for (i in 1:max(lengths))
lines[i] <- paste0(sapply(texts, function (x) return(x[[i]])), collapse = paste0(rep(" ", spaces), collapse = ""))
return(paste0(lines, collapse="\n"))
}
.combine(list(stage0, intro), spaces = 20)
cat(.combine(list(stage0, intro), spaces = 20))
cat(.combine(list(stage0, intro), spaces = 40))
cat(.combine(list(stage0, intro), spaces = 30))
cat(.combine(list(stage0, intro), spaces = 10))
cat(.combine(list(stage0, intro), spaces = 20))
cat(.combine(list(stage0, intro), spaces = 60))
cat(.combine(list(stage0, intro), spaces = 20))
cat(.combine(list(stage0, intro), spaces = 10))
stage0
nchar(word)
stage0 <- unlist(strsplit(stages[1], split = "\n"))s
stage0 <- unlist(strsplit(stages[1], split = "\n"))
stage0
word <- "whatever"
word0 <- paste0(rep("_", nchar(word)), collapse = " ")
word0
c(stage0, word0)
c(stage0,"", word0)
nchar(c(stage0, "", word0))
max(nchar(c(stage0, "", word0)))
sprintf(paste0("%-", max(nchar(c(stage0, "", word0))),"s"), c(stage0, "", word0))
lengths
texts
i <- 1
texts[[i]]
sprintf(paste0("%-", max(nchar(texts[[i]])),"s"), texts[[i]])
lettersGuessed
lettersGuessed <- c("a", "w", "a", "b", "l")
lettersWord <- unlist(strsplit(x = "align", split = NULL))
lettersWord
unique(lettersGuessed[lettersGuessed %in% lettersWord])
unique(lettersGuessed[! lettersGuessed %in% lettersWord])
paste0("Correct guesses:\n", correct, "\n\nIncorrect guesses:", incorrect)
correct <- unique(lettersGuessed[lettersGuessed %in% lettersWord])
incorrect <- unique(lettersGuessed[! lettersGuessed %in% lettersWord])
paste0("Correct guesses:\n", correct, "\n\nIncorrect guesses:", incorrect)
cat(paste0("Correct guesses:\n", correct, "\n\nIncorrect guesses:", incorrect))
correct
cat(paste0("Correct guesses:\n", paste0(correct, collapse = " "), "\n\nIncorrect guesses:", paste0(incorrect, collapse = " ")))
cat(paste0("Correct guesses:\n", paste0(correct, collapse = " "), "\n\nIncorrect guesses:\n", paste0(incorrect, collapse = " ")))
.scrollify = function (text, sentenceLength) {
sentences <- strwrap(text, sentenceLength)
maxSentence <- max(nchar(sentences))
sentences <-  sprintf(paste0("%-", sentenceLength,"s"), sentences)
scroll <- c()
scroll[1] <- paste(" ", paste0(rep("_", sentenceLength + 5), collapse = ""), collapse = "")
scroll[2] <- paste("/\\", paste0(rep(" ", sentenceLength + 3), collapse = ""), "\\", collapse = "")
scroll[3] <- paste("\\_|", paste0(rep(" ", sentenceLength + 2), collapse = ""), "|", collapse = "")
for (i in 1:length(sentences))
scroll[length(scroll) + 1] <- paste0("  |  ", sentences[[i]], "  |", collapse = "")
scroll[length(scroll) + 1] <- paste0("  |  ", paste(rep(" ", sentenceLength), collapse = ""), "  |", collapse = "")
scroll[length(scroll) + 1] <- paste0("  |  ", paste(rep("_", sentenceLength + 2), collapse = ""), "|_", collapse = "")
scroll[length(scroll) + 1] <- paste0("  \\_/", paste(rep("_", sentenceLength + 4), collapse = ""), "/", collapse = "")
return(paste0(scroll, collapse="\n"))
},
.combine = function (texts, spaces, horiz = TRUE) {
lengths <- sapply(texts, length)
for (i in 1:length(texts)) {
texts[[i]] <- sprintf(paste0("%-", max(nchar(texts[[i]])),"s"), texts[[i]])
texts[[i]][(1:max(lengths))[-(1:lengths[i])]] <- paste0(rep(" ", max(nchar(texts[[i]]))), collapse = "")
}
lines <- c()
for (i in 1:max(lengths))
lines[i] <- paste0(sapply(texts, function (x) return(x[[i]])), collapse = paste0(rep(" ", spaces), collapse = ""))
return(paste0(lines, collapse="\n"))
}
.scrollify = function (text, sentenceLength) {
sentences <- strwrap(text, sentenceLength)
maxSentence <- max(nchar(sentences))
sentences <-  sprintf(paste0("%-", sentenceLength,"s"), sentences)
scroll <- c()
scroll[1] <- paste(" ", paste0(rep("_", sentenceLength + 5), collapse = ""), collapse = "")
scroll[2] <- paste("/\\", paste0(rep(" ", sentenceLength + 3), collapse = ""), "\\", collapse = "")
scroll[3] <- paste("\\_|", paste0(rep(" ", sentenceLength + 2), collapse = ""), "|", collapse = "")
for (i in 1:length(sentences))
scroll[length(scroll) + 1] <- paste0("  |  ", sentences[[i]], "  |", collapse = "")
scroll[length(scroll) + 1] <- paste0("  |  ", paste(rep(" ", sentenceLength), collapse = ""), "  |", collapse = "")
scroll[length(scroll) + 1] <- paste0("  |  ", paste(rep("_", sentenceLength + 2), collapse = ""), "|_", collapse = "")
scroll[length(scroll) + 1] <- paste0("  \\_/", paste(rep("_", sentenceLength + 4), collapse = ""), "/", collapse = "")
return(paste0(scroll, collapse="\n"))
}
score <- cat(paste0("Correct guesses:\n", paste0(correct, collapse = " "), "\n\nIncorrect guesses:\n", paste0(incorrect, collapse = " ")))
score <- paste0("Correct guesses:\n", paste0(correct, collapse = " "), "\n\nIncorrect guesses:\n", paste0(incorrect, collapse = " "))
.scrollify(score, 40)
cat(.scrollify(score, 40))
score
score <- paste0("Correct guesses:", paste0(correct, collapse = " "), "\n\nIncorrect guesses:", paste0(incorrect, collapse = " "))
score
cat(.scrollify(score, 40))
score <- paste0("Correct guesses: ", paste0(correct, collapse = " "), "\n\nIncorrect guesses: ", paste0(incorrect, collapse = " "))
cat(.scrollify(score, 40))
stages
unlist(strsplit(stages[8], split = "\n"))
win
lost <- unlist(strsplit(lost, split = "\n"))
lost
stage <- unlist(strsplit(stages[mistakes + 1], split = "\n"))
mistakes = 3
stage <- unlist(strsplit(stages[mistakes + 1], split = "\n"))
winText <- unlist(strsplit(win[(i %% 2) + 1)], split = "\n"))
unlist(strsplit(win[(i %% 2) + 1)], split = "\n")
unlist(strsplit(win[(i %% 2) + 1], split = "\n"))
var  <- "columnA"
paste0("Good job! Now, it\'s time to go back to the spreadheet editor and start typing letters in column \"", var ,"\". \n\nHave fun!"
)
